// install instructions
// Author : Drumsticks
// GitHub : https://github.com/Drumsticks1/TS3-LogDataViewer

This installation instructions are intended for linux distributions (you need to write your own init script for the
ts3-ldv service if your linux distribution doesn't use systemd).

Experienced users may also install it on other operating systems (nodejs should run on most of them).

Dependencies:
- nodejs (https://nodejs.org)
- nginx (or another web server, instructions given here are limited to nginx but you can surely create an equivalent
  configuration if you are familiar with another web server)

Soft dependencies:
- git (for cloning the repository, you could also download it via https://github.com/Drumsticks1/TS3-LogDataViewer.git)

You will require:
    - an user & group that is running your web server and has access to the files that can be accessed online
      (e.g. www-data)
    - an user that is running the ts3-ldv app (e.g. ts3-ldv). This user must have read access to the logs of your
      teamspeak3 server (e.g. "/home/teamspeak/teamspeak3-server_linux_amd64/logs/") (could be achieved by adding the
      ts3-ldv user to a group that is running the teamspeak3 server and has access to the logs).

Example creation of the ts3-ldv user as part of the teamspeak group (has access to the logs) (without a home directory):
    useradd -M --no-user-group -g teamspeak ts3-ldv

Files that are served by your (nginx) web server are stored in a directory on your server that can be read by the
www-data user & group. This directory will be referenced to as "/var/www/www.your-domain.com" in the instructions below.


Installation:

Create the ts3-ldv directory in /var/www/www.your-domain.com:
(To prevent mix-ups with the ts3-ldv user and the directory it will be named ts3-ldv-dir, you can of course rename it)
    cd /var/www/www.your-domain.com
    mkdir ts3-ldv-dir

Make ts3-ldv the owner user and www-data the owner group of the ts3-ldv-dir (ts3-ldv needs to write into the directory,
www-data needs to read):
    chown ts3-ldv:www-data ts3-ldv-dir

Clone the TS3-LDV git repository into the folder:
    git clone https://github.com/Drumsticks1/TS3-LogDataViewer.git ts3-ldv-dir

Enter the ts3-ldv-dir directory and install the package dependencies:
    cd ts3-ldv-dir
    npm install

Copy the default configuration to the local folder and modify it according to your installation (see README.md for more
information about the settings):
    cp conf/default-conf.json local/conf.json
    nano local/conf.json

Configure the web server so that only authorized clients have access to specific files (assuming you already have a
working nginx configuration):
Insert the following directives into the nginx configuration file of the domain (you will have to update the directory
name and port if you modified them in your ts3-ldv configuration):

location /ts3-ldv-dir {
    auth_basic "Authentication required!";
    auth_basic_user_file /path/to/your/auth/file/.htpasswd;

    # Deny access to all files not explicitly whitelisted below
    location /ts3-ldv-dir {
        deny all;
    }

    # Override the 'deny all' directive for files that should be accessible for clients
    #
    # Long version of the regex below (nginx wants a one line regex):
    # /ts3-ldv-dir/(
    #     css/(
    #         foundation|
    #         style).min.css|
    #     img/favicon.png|
    #     js/TS3-LogDataViewer.js|
    #     index.html|
    #     local/output.json|
    #     node_modules/(
    #         jquery/dist/jquery|
    #         tablesorter/dist/js/(
    #             jquery.tablesorter.combined|
    #             extras/jquery.tablesorter.pager)|
    #         moment/min/moment|
    #         nanobar/nanobar|
    #         foundation-sites/dist/js/foundation).min.js)
    #
    location ~ /ts3-ldv-dir/(css/(foundation|style).min.css|img/favicon.png|js/TS3-LogDataViewer.js|index.html|local/output.json|node_modules/(jquery/dist/jquery|tablesorter/dist/js/(jquery.tablesorter.combined|extras/jquery.tablesorter.pager)|moment/min/moment|nanobar/nanobar|foundation-sites/dist/js/foundation).min.js) {

    }

    # Passing the buildJSON request to the server.
    # The port has to be the same as in your configuration.
    location /ts3-ldv-dir/express/buildJSON {
        proxy_pass http://127.0.0.1:3000/buildJSON;
    }
}

IMPORTANT:
Regarding the auth_basic directives in the configuration: They are used for restricting the access to the web interface
by adding an username & password login. See https://nginx.org/en/docs/http/ngx_http_auth_basic_module.html for more
information. (You should really check if this is working properly: otherwise everybody can access the interface!)

Using an systemd service script is optional but strongly recommended:
If you aren't using the systemd script or a script for an equivalent system of your distribution that is based on the
system script, you will have to write your own start/stop script that runs the nodejs/app.js with nodejs.

Systemd service script:
    See conf/ts3-ldv.service for an example configuration for a systemd service script.

You should now be able to start the server-side app via "service ts3-ldv start", access the location on your domain via
your browser and access the interface.

Important note: You will have to directly navigate to www.your-domain.com/ts3-ldv-dir/index.html as a result of the
whitelisting in the nginx configuration, navigating to www.your-domain.com/ts3-ldv-dir/ should not work if your
configuration is working as expected.

In case of problems it might be helpful to take a look at the program log files.
If the program fails to start, doesn't work properly or you run into any other issues, a look at the program log might
be helpful, also ensure that you configured the paths correctly.

Additional & Optional:

Logrotate script (if you care about the ts3-ldv logs):
    If you are using logrotate you can use the example configuration ts3-ldv.logrotate in the conf folder.

